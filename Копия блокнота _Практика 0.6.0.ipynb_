{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729849575425}],"collapsed_sections":["VxawR9NubT_F","y05x0eD0cVCC","vYM0LyxxdElN","L_w8H8i-fQcP","hZW0NZ7SgTcp","k5BzJW5ZeaQN","iQ8Z-7PYgu1_"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"O5bJpWr7-8l5"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["duplicate_words = ['apple', 'banana', 'apple', 1, 3, 4, 4, 5]\n","words = []\n","for i in duplicate_words:\n","  if not i in words:\n","    words.append(i)\n","print(words)"],"metadata":{"id":"ml5gnbPXbeju"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["\n","\n","def simple_number(num):\n","  dividers = set()\n","  for i in range(2, int(num**(1/2))+1):\n","    if num % i == 0:\n","      dividers.add(i)\n","      dividers.add(num//i)\n","\n","  if dividers:\n","    return False\n","  else:\n","    return True\n","\n","\n","ran = input('Введите диапазон через запятую с пробелом, как указано в примере ')\n","simple = []\n","ran = list(map(int,ran.split(', ')))\n","for i in range(ran[0],ran[1]+1):\n","  if simple_number(i):\n","    simple.append(i)\n","print(*simple)"],"metadata":{"id":"XSMJnLgrc6Bf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def union(keys, values):\n","  f_dict = {}\n","  for i in range(len(keys)):\n","    f_dict[keys[i]] = values[i]\n","  return f_dict\n","\n","\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","print(union(keys,values))\n"],"metadata":{"id":"CRvhHTjCdvjS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def sm(numbers):\n","  s = 0\n","  for i in numbers:\n","    s+=i\n","  return s\n","\n","\n","def mean(numbers):\n","  c = 0\n","  for i in numbers:\n","    c+=1\n","  result = sm(numbers)/c\n","  return result\n","\n","\n","def median(numbers):\n","  length = 0\n","  med = 0\n","  for i in numbers:\n","    length+=1\n","  for i in numbers:\n","    med+=1\n","    if med == length//2 + 1:\n","      return i\n","\n","\n","def mode(numbers):\n","  mx = 0\n","  num_mode = 0\n","  for i in numbers:\n","    c = 0\n","    for j in numbers:\n","      if i == j:\n","        c+=1\n","        if c > mx:\n","          mx = c\n","          num_mode = i\n","  return num_mode\n","\n","\n","def statistics(numbers):\n","  final_dict = {}\n","  final_dict['mean'] = mean(numbers)\n","  final_dict['median'] = median(numbers)\n","  final_dict['mode'] = mode(numbers)\n","  final_dict['sum'] = sm(numbers)\n","  return final_dict\n","\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","print(statistics(numbers))"],"metadata":{"id":"dW6jW_rjfuba"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["print('Введите строку без знаков припинания:')\n","s = input()\n","words = s.split()\n","number = 0\n","max_number = 0\n","max_length = 0\n","word_max = ''\n","for i in words:\n","  lenght = 0\n","  number+=1\n","  for j in i:\n","    lenght+=1\n","  if lenght > max_length:\n","    max_length = lenght\n","    max_number = number\n","    word_max = i\n","print('Самое длинное слово с номером ' + str(max_number) + ' ' + word_max)\n","\n","\n","\n","\n"],"metadata":{"id":"rC5DpHHLsDYp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["#не знал можно ли использовать готовые функции, поэтому скопипастил из предыдущих заданий\n","#сумма\n","def sm(numbers):\n","  s = 0\n","  for i in numbers:\n","    s+=i\n","  return s\n","\n","\n","#среднее значение\n","def mean(numbers):\n","  c = 0\n","  for i in numbers:\n","    c+=1\n","  result = round(sm(numbers)/c,2)\n","  return result\n","\n","\n","#добавить оценку\n","def add_point():\n","  name_point = input('Введите имя студента и его оценку(1-5) через пробел:\\n').split()\n","  if int(name_point[1]) >=1 and int(name_point[1]) <= 5:\n","    if not name_point[0] in base.keys():\n","      base[name_point[0]] = []\n","      base[name_point[0]].append(int(name_point[1]))\n","    else:\n","      base[name_point[0]].append(int(name_point[1]))\n","  else:\n","    print('Вы ввели неккоректную оценку')\n","\n","\n","#среднее значение оценки для одного студента\n","def average():\n","  name = input('Введите имя студента: \\n')\n","  if name in base.keys():\n","    print('Среднее значение: ' + str(mean(base[name])))\n","  else:\n","    print('Студента с таким именем не найдено')\n","\n","\n","#вывод всех средних оценок, все студентов\n","def all_average():\n","  for k,v in base.items():\n","    print('Имя: ' + k + '; Средняя оценка: ' + str(mean(v)))\n","\n","#оценки и средняя оценка для студента\n","def points_and_average():\n","  name = input('Введите имя студента:\\n')\n","  if name in base.keys():\n","    for k,v in base.items():\n","      if k == name:\n","        print('Оценки: ' + ', '.join(str(point) for point in v) + '; Средняя оценка: ' + str(mean(v)))\n","  else:\n","    print('Студента с таким именем не найдено')\n","\n","\n","#основной блок программы\n","base = {}\n","print('Вас приветствует сервис по выставлению оценок студентам\\n\\\n","1)Добавить оценку\\n\\\n","2)Средняя оценка студента\\n\\\n","3)Список всех студентов и их средних баллов\\n\\\n","4)Оценки и средняя оценка студента\\n\\\n","5)Завершение работы сервиса')\n","while True:\n","  n = int(input('Введите номер функции:\\n'))\n","  if n == 1:\n","    add_point()\n","  elif n == 2:\n","    average()\n","  elif n == 3:\n","    all_average()\n","  elif n == 4:\n","    points_and_average()\n","  elif n == 5:\n","    break\n","  else:\n","    print('Неккоректный ввод')\n","\n","\n"],"metadata":{"id":"HqRyz3m9iKWP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":[],"metadata":{"id":"DhxyYwHwh2V4"},"execution_count":null,"outputs":[]}]}
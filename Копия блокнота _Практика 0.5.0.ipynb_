{"cells":[{"cell_type":"markdown","metadata":{"id":"Bu5gIJfHNPHw"},"source":["ФИО:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CbHI8c7cM9Eg"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"VrNrBpmocGRd"},"source":["# **Задание 1**"]},{"cell_type":"markdown","metadata":{"id":"XhV1bnm1bR2h"},"source":["\n","\n","Дан словарь, содержащий имена и возраст людей, напишите программу выводящую возраст человека по имени\n","\n","Дано:\n","\n","```\n","{\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","```\n","\n","Вввод:\n","\n","\n","```\n","Alice\n","```\n","\n","Вывод:\n","\n","\n","```\n","Alice 25\n","```\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PElJj6DvsgjD"},"outputs":[],"source":["per = {\"Alice\": 25, \"Bob\": 30, \"Charlie\": 35}\n","print('Введите имя человека: ')\n","name = input()\n","if name in per:\n","  print(name + ' ' + str(per[name]))\n","else:\n","  print('Имя человека не обнаруженно')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lpjJz-_YcJ-t"},"source":["# **Задание 2**\n"]},{"cell_type":"markdown","metadata":{"id":"tMEsAB4rUiWW"},"source":["\n","\n","Дан список, состоящий из целых чисел, необходимо написать функцию считающую сумму всех положительных четных чисел списка\n","\n","Ввод:\n","\n","```\n","1, 2, 3, 4, 5, 6, 7, 8, 9\n","```\n","\n","Вывод:\n","\n","\n","```\n","20\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для суммирования чисел\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wDNUFLeqNQS_"},"outputs":[],"source":["print('Введите список чисел(через пробел и запятую)')\n","a = input()\n","a = list(map(int, a.split(', ')))\n","ch = []\n","for i in a:\n","  if i%2==0 and i>=0:\n","    ch.append(i)\n","sm = 0\n","for i in ch:\n","  sm = sm+i\n","print(sm)\n","\n"]},{"cell_type":"markdown","metadata":{"id":"WT_v-vz1dUZJ"},"source":["# **Задание 3**"]},{"cell_type":"markdown","metadata":{"id":"ZI5Xeh2DdXgF"},"source":["Дан словарь, содержащий название фрукта и его цвет, выведите список всех желтых фруктов\n","\n","\n","Дано:\n","\n","```\n","fruits_and_colors = {\n","    \"apple\": \"red\",\n","    \"banana\": \"yellow\",\n","    \"mango\": \"yellow\",\n","    \"orange\": \"orange\",\n","    \"lemon\": \"yellow\",\n","    \"grape\": \"purple\"\n","}\n","```\n","\n","Вывод:\n","\n","\n","```\n","Yellow fruits:\n","banana\n","lemon\n","mango\n","```\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aNzFTkhKdkTG"},"outputs":[],"source":["fruits_and_colors = {\"apple\": \"red\",\"banana\": \"yellow\",\"mango\": \"yellow\",\"orange\": \"orange\",\"lemon\": \"yellow\",\"grape\": \"purple\"}\n","print('Yellow fruits:')\n","for k,v in fruits_and_colors.items():\n","  if v == 'yellow':\n","    print(k)"]},{"cell_type":"markdown","metadata":{"id":"iHtMGt2icM7w"},"source":["# **Задание 4**\n"]},{"cell_type":"markdown","metadata":{"id":"rS3THsnBQ_EB"},"source":["\n","\n","Дан словарь, необходимо написать функцию меняющую ключ и значение местами\n","\n","Дано:\n","\n","\n","```\n","{\"a\": 1, \"b\": 2, \"c\": 3}\n","```\n","\n","Вывод:\n","\n","```\n","{1: 'a', 2: 'b', 3: 'c'}\n","```\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MNRusyLDcQ59"},"outputs":[],"source":["def f(x):\n","  for k,v in x.items():\n","    del x[k]\n","    x[v] = k\n","  return x\n","\n","\n","slov = {\"a\": 1, \"b\": 2, \"c\": 3}\n","print(f(slov))\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"x6ff5nd0cUxD"},"source":["# **Задание 5**"]},{"cell_type":"markdown","metadata":{"id":"ypQNHOG4NQz3"},"source":["Дан список слов, неограниченной длинны, сформируйте словарь, где в качестве ключа будет слово, а в качестве значения количество слов\n","\n","**Критерии**\n","\n","\n","*   Словарь необходимо отсортировать по убыванию количества элементов в списке.\n","*   Подсчет элементов должен быть реализован в отдельной функции\n","*   Сортировка пары `ключ:значение` должна быть реализована также в виде отдельной функции\n","\n","\n","\n","\n","Дано:\n","```\n","['apple','banana','orange','apple','apple','banana']\n","```\n","\n","\n","Вывод:\n","```\n","{'apple':3, 'banana': 2, 'orange': 1}\n","```\n","\n","***Запрещено:***\n","\n","*   Использование готовых функций для сортировки\n","*   Использование готовых функций для подсчета элементов\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J10PjdVQUbyq"},"outputs":[],"source":["# Подсказка: сортировку словаря можно сделать через две функции (нахождение максимального эллемента и основной функции сортировки)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X9bjlB_uJ51_"},"outputs":[],"source":["#создание словаря с подсчетом\n","def c(x):\n","  name_count = {}\n","  for i in x:\n","    if not(i) in name_count.keys():\n","      count = 0\n","      for j in x:\n","        if i == j:\n","          count+=1\n","      name_count[i] = count\n","  return name_count\n","#поиск максимального элемента\n","def mx(x):\n","  m = 0\n","  for v in x.values():\n","    if v > m:\n","      m = v\n","  return m\n","#сортировка словаря\n","def s(x):\n","  sort_n_c = {}\n","  for i in range(mx(x),0,-1):\n","    for k,v in x.items():\n","      if i == v:\n","        sort_n_c[k] = v\n","  return sort_n_c\n","\n","a = ['banana','apple','orange','apple','apple','banana']\n","print(s(c(a)))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6XeLmW1zOYBR"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"d7fDUr2WcY_G"},"source":["# **Задание 6**"]},{"cell_type":"markdown","metadata":{"id":"m11qdVhSWBi7"},"source":["Дан словарь, содержащий информацию о людях, необходимо:\n","\n","\n","\n","*   Вывести всех людей старше 30 лет\n","*   Вывести список городов и количество людей из словаря проживающих в них\n","*   Вывести список профессий и список людей для каждой профессии\n","\n","**Критерии**\n","\n","Каждый из пунктов необходимо реализовать в виде функции\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lSNtB39OWtFl"},"outputs":[],"source":["def pb30(x):\n","  people_bol_30 = []\n","  for k,v in x.items():\n","    if v['age'] > 30:\n","      people_bol_30.append(k)\n","  return people_bol_30\n","\n","def city_count(x):\n","  city = {}\n","  for k,v in x.items():\n","    c=0\n","    if not(v['city']) in  city.keys():\n","      for j in x.values():\n","        if v['city'] == j['city']:\n","          c+=1\n","      city[v['city']] = c\n","  return city\n","\n","def proffesion(x):\n","  prof = {}\n","  for k,v in x.items():\n","    if not(v['occupation']) in prof.keys():\n","      prof[v['occupation']] = []\n","      for j,l in x.items():\n","        if l['occupation'] == v['occupation']:\n","          prof[v['occupation']].append(j)\n","  return prof\n","\n","\n","\n","\n","people_info = {\n","    \"Alice\": {\"age\": 25, \"city\": \"New York\", \"occupation\": \"Engineer\"},\n","    \"Bob\": {\"age\": 30, \"city\": \"Los Angeles\", \"occupation\": \"Designer\"},\n","    \"Charlie\": {\"age\": 35, \"city\": \"Chicago\", \"occupation\": \"Teacher\"},\n","    \"Diana\": {\"age\": 28, \"city\": \"Miami\", \"occupation\": \"Doctor\"},\n","    \"Ethan\": {\"age\": 40, \"city\": \"Seattle\", \"occupation\": \"Chef\"},\n","    \"Frank\": {\"age\": 32, \"city\": \"Atlanta\", \"occupation\": \"Lawyer\"},\n","    \"Gabriella\": {\"age\": 29, \"city\": \"San Francisco\", \"occupation\": \"Software Engineer\"},\n","    \"Harrison\": {\"age\": 38, \"city\": \"Denver\", \"occupation\": \"Architect\"},\n","    \"Isabella\": {\"age\": 26, \"city\": \"Washington D.C.\", \"occupation\": \"Journalist\"},\n","    \"Julian\": {\"age\": 42, \"city\": \"Miami\", \"occupation\": \"Musician\"},\n","    \"Kate\": {\"age\": 31, \"city\": \"Philadelphia\", \"occupation\": \"Nurse\"},\n","    \"Lucas\": {\"age\": 36, \"city\": \"Nashville\", \"occupation\": \"Businessman\"},\n","    \"Mia\": {\"age\": 27, \"city\": \"Atlanta\", \"occupation\": \"Artist\"},\n","    \"Natalie\": {\"age\": 39, \"city\": \"Portland\", \"occupation\": \"Writer\"},\n","    \"Oliver\": {\"age\": 44, \"city\": \"Minneapolis\", \"occupation\": \"Professor\"},\n","    \"Penelope\": {\"age\": 33, \"city\": \"San Diego\", \"occupation\": \"Marketing Manager\"},\n","    \"Quincy\": {\"age\": 41, \"city\": \"Nashville\", \"occupation\": \"Singer\"},\n","    \"Rachel\": {\"age\": 34, \"city\": \"Cleveland\", \"occupation\": \"Teacher\"},\n","    \"Sophia\": {\"age\": 29, \"city\": \"Nashville\", \"occupation\": \"Engineer\"},\n","    \"Tessa\": {\"age\": 37, \"city\": \"Miami\", \"occupation\": \"Lawyer\"}\n","}\n","print(*pb30(people_info))\n","print(city_count(people_info))\n","print(proffesion(people_info))"]},{"cell_type":"markdown","metadata":{"id":"Fd95-S9cYhct"},"source":["Задание: Разработка системы отзывов о предметах\n","\n","Описание: Создать программу на Python для хранения и управления отзывами о предметах учебного курса. Программа должна позволять пользователям добавлять, просматривать и удалять отзывы, а также вычислять средний балл по заданному предмету.\n","\n","**Функционал:**\n","\n","*   Добавление отзыва и оценки:\n","   *   Пользователь может ввести название предмета, оценку (от 1 до 5) и текст отзыва.\n","   *   Отзывы должны храниться в структуре данных (например, словаре), где ключом будет название предмета, а значением - список отзывов (каждый отзыв может хранить оценку и комментарий).\n","*   Просмотр отзывов и оценок:\n","   *   Пользователь может запросить отзывы для указанного предмета.\n","   *   Если для указанного предмета есть отзывы, программа должна отобразить список всех отзывов и соответствующих оценок.\n","*   Удаление отзыва:\n","   *   Пользователь может удалить отзыв по индексу. Необходимо заранее уведомить пользователя о том, какие отзывы доступны для удаления.\n","   *   Программа должна обработать ситуацию, когда индекс введен неправильно.\n","*   Вычисление среднего балла по предмету:\n","   *   Пользователь может ввести название предмета, и программа должна вычислить и вывести средний балл по всем отзывам для этого предмета.\n","   *   Если отзывов нет, программа должна сообщить об этом.\n","\n","\n","**Критерии:**\n","\n","*   Код должен быть оформлен в виде функций\n","*   Необходимо обрабатывать неправильный ввод пользователя\n","*   Должны быть комментарии к функциям\n","*   Присутсвует весь дополнительный функционал\n","\n","\n","\n","**Опционально:**\n","\n","Предлагаю вам добавить свои критерии оценки или вопросы, на которые должен ответить студент, чтобы оценить пару\n","\n","\n"]},{"cell_type":"code","source":["#добавление оценки и отзыва\n","def add_feedback():\n","  print('----------------------------------------------------')\n","  name = input('Введите название предмета(Математика, Русский язык, Информатика):\\n')\n","  if name == 'Математика' or name == 'Русский язык' or name == 'Информатика':\n","    grades_feedback = input('Введите оценку(1-5) и отзыв через точку с запятой\\n\\\n","Пример ввода: <5;Все понравилось!>\\n').split(';')\n","    if (int(grades_feedback[0]) >= 1) and (int(grades_feedback[0]) <= 5):\n","      base_feedback[name]['grades'].append(grades_feedback[0])\n","      base_feedback[name]['feedback'].append(grades_feedback[1])\n","    else:\n","      print('Неккоректный ввод оценки')\n","  else:\n","    print('Неккоректный ввод предмета')\n","  print('----------------------------------------------------')\n","\n","#просмотр оценки и отзыва\n","def view_feedback():\n","  print('----------------------------------------------------')\n","  name = input('Введите название предмета(Математика, Русский язык, Информатика):\\n')\n","  if name == 'Математика' or name == 'Русский язык' or name == 'Информатика':\n","    if base_feedback[name]['grades']:\n","      print('Вот все отзывы с оценками на данный предмет:')\n","      for i in range(len(base_feedback[name]['grades'])):\n","        print('ID: ' + str(i+1) + '/Оценка: ' + base_feedback[name]['grades'][i] + '/ Отзыв: ' + base_feedback[name]['feedback'][i])\n","    else:\n","      print('На данный предмет пока что нет отзывов')\n","  else:\n","    print('Неккоректный ввод предмета')\n","  print('----------------------------------------------------')\n","\n","#удалените оценки и отзыва\n","def del_feedback():\n","  print('----------------------------------------------------')\n","  name = input('Введите название предмета(Математика, Русский язык, Информатика):\\n')\n","  if name == 'Математика' or name == 'Русский язык' or name == 'Информатика':\n","    id = input('Для того чтобы удалить отзыв, впишите индекс отзыва\\n\\\n","*Для того чтобы узнать индекс отзыва вы можете воспользоваться функцией <2)Просмотр отзыва и оценок > \\n\\\n","*Пустой ввод вернет вас на главную страницу\\n')\n","    if id == '':\n","      return print('----------------------------------------------------')\n","    else:\n","      f = 0\n","      for i in range(len(base_feedback[name]['grades'])):\n","        if i+1 == int(id):\n","          f=1\n","          break\n","      if f == 1:\n","        for i in range(len(base_feedback[name]['grades'])):\n","          if i+1 == int(id):\n","            base_feedback[name]['grades'].pop(i)\n","            base_feedback[name]['feedback'].pop(i)\n","      else:\n","        print('Отзыва с таким айди не найдено')\n","  else:\n","    print('Неккоректный ввод предмета')\n","  print('----------------------------------------------------')\n","\n","#среднее значение оценки по какому-то предмету\n","def average_grades():\n","  print('----------------------------------------------------')\n","  sm = 0\n","  c = 0\n","  name = input('Введите название предмета(Математика, Русский язык, Информатика):\\n')\n","  if name == 'Математика' or name == 'Русский язык' or name == 'Информатика':\n","    if base_feedback[name]['grades']:\n","      for i in base_feedback[name]['grades']:\n","        sm +=int(i)\n","        c+=1\n","      av = sm/c\n","      print('Средний балл по ' + name + ' ' + str(round(av,2)))\n","    else:\n","      print('Оценок на данный предмет пока что нет')\n","  else:\n","    print('Неккоректный ввод предмета')\n","  print('----------------------------------------------------')\n","\n","#основной блок программы\n","def main_block(n):\n","  if n == 1:\n","    add_feedback()\n","  if n == 2:\n","    view_feedback()\n","  if n == 3:\n","    del_feedback()\n","  if n == 4:\n","    average_grades()\n","\n","#словарь с данными о предмете/ его оценках/ отзывах\n","base_feedback = {'Математика':{'grades':[], 'feedback':[]},\n","                 'Русский язык':{'grades':[], 'feedback':[]},\n","                 'Информатика':{'grades':[], 'feedback':[]}\n","                 }\n","print('Вас приветствует сервис по оценки пар, сервис анонимный так что ваши данные не потребуются')\n","#главный блок для того чтобы не сколько раз не выводить расширеную версию описания каждой функции\n","while True:\n","  n1 = int(input('Для начала работы введите 1\\n\\\n","Для завершения работы сервиса введите 2\\n'))\n","  if n1 ==1:\n","    print('1)Добавить отзыв\\n\\\n","2)Просмотр отзыва и оценок \\n\\\n","3)Удалить отзыв\\n\\\n","4)Вычисление среднего балла предмета \\n\\\n","5)Вернуться в начало')\n","    #внутренний блок программы где пользователь работает с функциями\n","    while True:\n","      n = int(input('Введите номер функции:\\n'))\n","      if n >= 1 and n<=4:\n","        main_block(n)\n","      elif n == 5:\n","        break\n","      else:\n","        print('Неккоректный ввод')\n","  elif n1 == 2:\n","    break\n","  else:\n","    print('Неккоректный ввод')\n","\n"],"metadata":{"id":"rio-Q28pJBRK"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1TEBJaKANAI0JxDY268tNeKGpHMChb2sK","timestamp":1729245525906}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
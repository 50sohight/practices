{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1M-O_KUCtKLJnPKgWsQQu9bkGfa2vOHnO","timestamp":1732269503939}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"fLDS5f_mCnPa"}},{"cell_type":"markdown","source":["# Задание (совместное с преподавателем)\n","\n","\n"],"metadata":{"id":"-CSHUbWzCqeM"}},{"cell_type":"markdown","source":["Напишите систему для учёта отпусков с возможностью узнавать, сколько дней отпуска осталось у того или иного сотрудника.\n","Для этого создайте класс Employee со следующими методами:\n","\n","- Метод consume_vacation должен отвечать за списание дней отпуска.\n","\n","Единственный параметр этого метода (кроме self) — количество потраченных отпускных дней (целое число).\n","\n","При вызове метода consume_vacation соответствующее количество дней должно вычитаться из общего числа доступных отпускных дней сотрудника.\n","\n","Чтобы определить число доступных отпускных дней конкретного сотрудника, в классе опишите атрибут экземпляра |, который по умолчанию будет равен значению атрибута класса vacation_days, и используйте этот атрибут в работе метода.\n","\n","- Метод get_vacation_details должен возвращать остаток отпускных дней сотрудника в формате: ```Остаток отпускных дней: <число>.```\n","\n","\n","Чтобы проверить работу программы:\n","1. Создайте экземпляр класса Employee.\n","2. Вызовите метод consume_vacation, указав подходящее значение аргумента, например 7.\n","3. Вызовите метод get_vacation_details."],"metadata":{"id":"a_flBjZOCwYz"}},{"cell_type":"code","source":["class Employee:\n","    vacation_days = 28\n","\n","    def __init__(self, first_name, second_name, gender):\n","        self.frist_name = first_name\n","        self.second_name = second_name\n","        self.gender = gender\n","        self.remaining_vacation_days = self.vacation_days\n","\n","    def consume_vacation(self, days):\n","        self.remaining_vacation_days -= days\n","\n","    def get_vacation_days(self):\n","        return f'Остатот отпускных дней: {self.remaining_vacation_days}'\n","\n"],"metadata":{"id":"G4bUraN4CwBI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"8XGka5GtEBK1"}},{"cell_type":"markdown","source":["Задание:\n","\n","Создайте класс с именем Rectangle который имеет:\n","- Атрибуты ширины и высоты.\n","- Метод расчета площади.\n","- Метод расчета периметра.\n","- Метод отображения размеров прямоугольника.\n","\n","Создайте экземпляр класса Rectangleи продемонстрируйте его функциональность."],"metadata":{"id":"jQ4qqd8nEZBY"}},{"cell_type":"code","source":["class Rectangle:\n","\n","    def __init__(self, width, height):\n","        self.wide = width\n","        self.height = height\n","\n","    def square(self):\n","        sq = self.wide*self.height\n","        return sq\n","\n","    def perimeter(self):\n","        perimet = 2*(self.wide+self.height)\n","        return perimet\n","\n","    def view_size(self):\n","        print( f'Длина: {self.wide}\\nВысота: {self.height}' )\n","\n","rect1 = Rectangle(55,55)\n","print(rect1.square())\n","print(rect1.perimeter())\n","rect1.view_size()\n","\n"],"metadata":{"id":"dG6uNPqTEAvt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"0ct1u6lqE73j"}},{"cell_type":"markdown","source":["Задание: Создайте мини версию банковской системы:\n","\n","\n","Инструкции:\n","\n","1. Создайте класс BankAccountсо следующими атрибутами:\n","    - account_holder -  владелец счета\n","    - balance - баланс счета\n","\n","2. Реализуйте следующие методы:\n","    - Метод для инициализации владельца счета: имя владельца счета и установите начальный баланс на 0.\n","    - deposit(amount): Добавьте указанную сумму к балансу.\n","    - withdraw(amount): Вычесть указанную сумму из баланса, если средств достаточно; в противном случае вывести предупреждение.\n","    - get_balance(): Возврат текущего баланса.\n","\n","\n","Создайте объект класса и продемонстрируйте его возможности"],"metadata":{"id":"FOpIpcLxE-WK"}},{"cell_type":"code","source":["class BankAccount:\n","\n","    def __init__(self, account_holder):\n","        self.account_holder = account_holder\n","        self.balance = 0\n","\n","    def deposit(self, amount):\n","        self.balance += amount\n","\n","    def withdraw(self, amount):\n","        if self.balance > amount:\n","            self.balance -= amount\n","        else:\n","            print('Недостаточно средств')\n","\n","    def get_balance(self):\n","        return self.balance\n","\n","\n","account1 = BankAccount('Олег')\n","account1.deposit(200)\n","account1.withdraw(100)\n","\n","print(account1.get_balance())"],"metadata":{"id":"WWXNIUrCE99W"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Задание 3"],"metadata":{"id":"C5DX5Uf2FfP6"}},{"cell_type":"markdown","source":["Возьмите код и задание (Рыцарь и дракон) из предыдущей практики и реализуйте его с применением классов"],"metadata":{"id":"0cR-MYepFgz6"}},{"cell_type":"code","source":["#сразу оговорочка. советую вам перенести этот код из коллаба, так как я писал его на пайчарме\n","#и там было удобно и корректно читать все повествование. тут же строки не переносятся и не комфортно читать историю\n","#так же у меня почему-то в пайчарме стояло 120 символов до этой разделяющей линии,\n","#так что извиняюсь что у меня здесь за нее выходит код\n","\n","import random\n","import time\n","\n","\n","# класс для создания персонажа\n","class Character:\n","    def __init__(self, name, armor, weapon, health, damage):\n","        self.name = name\n","        self.armor = armor\n","        self.weapon = weapon\n","        self.health = health\n","        self.damage = damage\n","\n","    # метод нанесения урона\n","    def take_damage(self, damage):\n","        self.health -= damage\n","        if self.health < 0:\n","            self.health = 0\n","\n","    # метод проверки жив ли герой\n","    def is_alive(self):\n","        return self.health > 0\n","\n","    # метод для модификации характеристики главного героя\n","    def modify_stats(self, health_mod, damage_mod):\n","        self.health = int(self.health * health_mod)\n","        self.damage = int(self.damage * damage_mod)\n","\n","    # метод для того чтобы восстанавливать здоровье героя после битвы\n","    def restore_health(self, max_health):\n","        self.health = max_health\n","\n","\n","# функция для проведения боя\n","def fight(hero, opponent):\n","    print(f'Бой начинается! {hero.name} сражается с {opponent.name}.')\n","    # данные две переменные служат для хранения изначального здоровья героя\n","    hero_original_health = hero.health\n","    opponent_original_health = opponent.health\n","\n","    while hero.is_alive() and opponent.is_alive():\n","        # нанесение героем урона оппоненту\n","        hero_attack = random.randint(hero.damage - 2, hero.damage + 2)\n","        opponent.take_damage(hero_attack)\n","        print(f'{hero.name} наносит {hero_attack} урона {opponent.name}. У {opponent.name} осталось {opponent.health} здоровья.')\n","\n","        time.sleep(1)\n","\n","        # проверка жив ли оппонент\n","        if not opponent.is_alive():\n","            print(f'{opponent.name} побежден! {hero.name} одержал победу.')\n","            hero.restore_health(hero_original_health)\n","            # восстановление здоровья для Кьуини, так как он может присоединиться к отряду ГГ\n","            if opponent.name == 'Кьуини':\n","                opponent.restore_health(opponent_original_health)\n","            return True\n","\n","        # удар противника\n","        opponent_attack = random.randint(opponent.damage - 3, opponent.damage + 3)\n","        hero.take_damage(opponent_attack)\n","        print(f'{opponent.name} наносит {opponent_attack} урона {hero.name}. У {hero.name} осталось {hero.health} здоровья.')\n","\n","        time.sleep(1)\n","\n","        # проверка на жизнь у ГГ\n","        if not hero.is_alive():\n","            print(f'{hero.name} был побежден! {opponent.name} выиграл.')\n","            hero.restore_health(hero_original_health)\n","            if opponent.name == 'Кьуини':\n","                opponent.restore_health(opponent_original_health)\n","            return False\n","\n","\n","# основная функция\n","def main():\n","    # создаем персонажей\n","    hero_name = input('Введите имя рыцаря:\\n')\n","    hero = Character(\n","        name=hero_name,\n","        armor='железные доспехи',\n","        weapon='меч',\n","        health=100,\n","        damage=15\n","    )\n","\n","    dragon = Character(\n","        name='Таргул',\n","        armor='чешуя',\n","        weapon='огненное дыхание',\n","        health=350,\n","        damage=20\n","    )\n","\n","    knight = Character(\n","        name='Кьуини',\n","        armor='потряпонные благородные доспехи',\n","        weapon='пика',\n","        health=100,\n","        damage=10\n","    )\n","\n","    goblins = Character(\n","        name='Шайка гоблинов',\n","        armor='тряпки',\n","        weapon='копья',\n","        health=150,\n","        damage=10\n","    )\n","\n","    #словарь для хранения выборов персонажа => создания ветвистости повествования\n","    archive = {}\n","\n","    #начало первой главы истории\n","    print(f'Часть 1. \"Рождение героя\"\\n'\n","          f'{hero.name} появляется на свет в таинственном замке, окружённом легендами. '\n","          f'В этот момент ему пророчат судьбу великого героя, которому предстоит спасти королевство от Таргула, '\n","          f'древнего дракона, который пробудился после векового сна.')\n","\n","    time.sleep(2)\n","\n","    #первый выбор ГГ\n","    n1 = input(f'{hero.name}, решается (при вводе используй номер действия):\\n'\n","               '1) Слушать историю о Таргуле от мудреца\\n'\n","               '2) Убежать на задний двор и тренироваться с мечом\\n'\n","               '3) Исследовать замок\\n')\n","\n","    if n1 == '1':\n","        print(\n","            f'{hero.name} нашел мудреца в библиотеке замка, где среди древних книг и свитков мудрец начинает рассказывать о Таргуле — драконе, '\n","            f'пробудившемся после векового сна. Его слова наполняют {hero.name} знаниями о слабостях и магических секретах этого чудовища. '\n","            f'История о древних сражениях, обычаи драконов и тайные ритуалы открывают перед ним новые пути для победы. '\n","            f'В ходе разговора мудрец рассказывает о старом подземном тоннеле, ведущем через лес, на пути к логову дракона. '\n","            f'Также {hero.name} узнает, что больше всего вреда Таргул получает под действием магического зелья.')\n","        #добавление того, какой из вариантов выбрал игрок и модификации характеристик ГГ\n","        #в последствие запись будет идентичная поэтому не буду комментировать\n","        archive['n1'] = 1\n","        hero.modify_stats(1.2, 1.0)\n","\n","    elif n1 == '2':\n","        print(\n","            f'{hero.name} покидает зал замка и выходит на задний двор, где каждый угол пропитан духом старинных дуэлей. '\n","            f'Здесь, среди высоких стен и тени деревьев, он посвящает долгие часы оттачиванию своего мастерства. '\n","            f'Его меч становится продолжением руки, а каждое движение — шагом на пути к победе над Таргулом.')\n","        archive['n1'] = 2\n","        hero.modify_stats(1.2, 1.4)\n","\n","    elif n1 == '3':\n","        print(f'{hero.name} блуждает по темным коридорам и скрытым уголкам замка, где каждый камень хранит свои тайны. '\n","              f'В одном из заброшенных залов он находит старые карты и странные артефакты, '\n","              f'которые могут быть полезны в его путешествии. Среди паутины и затмённых окон скрываются не только предметы прошлого, '\n","              f'но и забытые секреты, которые могут стать ключом к победе над Таргулом.')\n","        hero.modify_stats(1.1, 1.2)\n","        archive['n1'] = 3\n","\n","    time.sleep(3)\n","    #начало второй главы\n","    print(f'Часть 2. \"Первое испытание\"\\n'\n","          f'{hero.name} только что стал взрослым, '\n","          f'и перед ним открывается первый настоящий вызов. '\n","          f'Ему предстоит пройти испытание, которое определит его дальнейшую судьбу. '\n","          f'По старинным традициям королевства, каждому герою, решившему сразиться с Таргулом, '\n","          f'необходимо пройти первое испытание — спуститься в Лес Теней, который славится своими опасностями и мистическими существами. '\n","          f'Собрав все оружие и надев доспехи, {hero.name} отправляется в путь')\n","\n","    #ветвь того что герой узнал о тайном проходе от мудреца\n","    if archive['n1'] == 1:\n","        n2 = input(f'{hero.name}, решает:\\n'\n","                   '1) Пройти лес напрямик\\n'\n","                   '2) Искать проводника\\n'\n","                   '3) Пройти через подземный тунель, о котором говорил мудрец\\n')\n","\n","        if n2 == '1':\n","            print(\n","                f'{hero.name} решает не искать обходных путей и просто проходит через лес, полагаясь на свою силу и решимость. '\n","                f'Он сталкивается с монстрами и ловушками, которые требуют от него быстрой реакции и смелости. '\n","                f'Пройдя через лес, {hero.name} понимает, что сильно устал :(')\n","            hero.modify_stats(0.9, 0.8)\n","\n","        elif n2 == '2':\n","            print(\n","                f'{hero.name} находит старого охотника, который предлагает провести его через лес за определённую плату или услугу в будущем. '\n","                f'Проводник знает безопасные тропы, но не всегда честен. Проводник приводит {hero.name} в засаду, '\n","                f'{hero.name} приходится отдать некоторые вещи, чтобы остаться в живых, но охотник сжаливается над ним и всё-таки выводит его из леса.')\n","            hero.modify_stats(1.0, 0.9)\n","\n","        elif n2 == '3':\n","            print(\n","                f'{hero.name}, вспомнив рассказ мудреца, решает воспользоваться его советом и пройти через тайный проход. '\n","                f'Проходя через древние катакомбы, {hero.name} сильно устаёт, но ближе к выходу находит зелье силы. Выпив его, '\n","                f'он чувствует, что к нему приходит невиданная мощь.')\n","            hero.modify_stats(0.9, 1.2)\n","\n","    # если герой выбрал другой вариант\n","    else:\n","        n2 = input(f'{hero.name}, выбери действие:\\n'\n","                   '1) Пройти лес напрямик\\n'\n","                   '2) Искать проводника\\n')\n","\n","        if n2 == '1':\n","            print(\n","                f'{hero.name} решает не искать обходных путей и просто проходит через лес, полагаясь на свою силу и решимость. '\n","                f'Он сталкивается с монстрами и ловушками, которые требуют от него быстрой реакции и смелости. '\n","                f'Пройдя через лес, {hero.name} понимает, что сильно устал :(')\n","            hero.modify_stats(0.9, 0.8)\n","\n","        elif n2 == '2':\n","            print(\n","                f'{hero.name} находит старого охотника, который предлагает провести его через лес за определённую плату или услугу в будущем. '\n","                f'Проводник знает безопасные тропы, но не всегда честен. Проводник приводит {hero.name} в засаду, '\n","                f'{hero.name} приходится отдать некоторые вещи, чтобы остаться в живых, но охотник сжаливается над ним и всё-таки выводит его из леса.')\n","            hero.modify_stats(1.0, 0.9)\n","\n","    time.sleep(5)\n","\n","    #начало третьей главы\n","    print(f'Часть 3. Поиск союзников\\n'\n","          f'Пройдя через магический лес, {hero.name} понимает, что ему не справится в одиночку. '\n","          f'Несмотря на свою храбрость и силу, лес полон опасностей, а его магические существа сильнее, чем он мог себе представить. '\n","          f'Он ощущает, что для победы над Таргулом ему необходимо заручиться поддержкой союзников — тех, кто способен противостоять этим древним силам. '\n","          f'И хотя выбор союзников будет нелёгким, {hero.name} понимает, что без их помощи ему не суждено одолеть дракона.')\n","\n","    time.sleep(3)\n","\n","    #миссия с рыцарем\n","    print(f'Три месяца блужданий спустя, в самый неожиданный момент на пути {hero.name} появляется странствующий рыцарь — загадочный и молчаливый, но с глазами, полными решимости. '\n","          f'Его появление не случайно. В его руках — не только пика, но и мудрость, которая может стать решающей в борьбе с Таргулом. '\n","          f'Но, как всегда, не всё так просто: его истинные мотивы скрыты за маской рыцарского достоинства. '\n","          f'Это встреча, которая повлияет на ход всей истории.')\n","\n","    time.sleep(1)\n","\n","    n3 = int(input(f'Рыцарь предлагает {hero.name} дуэль, если {hero.name} выиграет, то рыцарь присоединится к {hero.name} в команду\\n'\n","            '1) Дуэль\\n'\n","            '2) Что за чепуха?\\n'))\n","\n","    #первая возможная дуэль ГГ\n","    if n3 == 1:\n","        if (fight(hero,knight)):\n","            print(f'Это было очевидно, {hero.name}, ни капельки не сомневался над своей победой '\n","                  f'и доблестный рыцарь Кьуини присоединяется в команду.')\n","            hero.modify_stats(0.9, 1.5)\n","            archive['n3'] = [1]\n","\n","        else:\n","            print(f'Проиграв, {hero.name} не отчаивается, а рад новому опыту, он благодарит рыцаря за бой и набравшись опыта'\n","                  f'движется дальше в поисках союзников.')\n","            hero.modify_stats(0.8, 1.2)\n","            archive['n3'] = [0]\n","\n","    elif n3 == 2:\n","        print(f'К черту его подумал {hero.name}, лучше остаться самому, чем сражаться об обок с этим болваном.')\n","        archive['n3'] = [0]\n","\n","    time.sleep(3)\n","\n","    #миссия с гоблинами и алхимиком\n","    print(f'Двигаясь по старой дороге, {hero.name} замечает у поворота яркие отблески костра. '\n","          f'Подойдя ближе, он видит шайку гоблинов, окруживших мужчину в рваной мантии. '\n","          f'Его тонкие руки связаны верёвками, а рядом на земле лежит сумка с разбитыми бутылками и выцветшими свитками. '\n","          f'Гоблины шумно обсуждают, что делать с пленённым, размахивая ржавыми копьями и весело гогоча.')\n","\n","    n3_2 = int(input(f'{hero.name} решает:\\n'\n","               f'1)Спасти алхимика\\n'\n","               f'2)Он заслуживает плена\\n'))\n","\n","    time.sleep(1)\n","\n","    if n3_2 == 1:\n","        print(f'Дожидаясь ночи {hero.name} отправляется спасать пленника. '\n","              f'Пытаясь не заметно освободить алхимика, {hero.name} наступает на сухую ветку,тем самым будет задремавших гоблинов.')\n","        #дуэль с гоблинами\n","        if (fight(hero, goblins)):\n","            print(f'{hero.name} ни капли не сомневаясь, расправляется с вожаком гоблинов, не получив не одного увечья,'\n","                  f'увидев случившиеся остальные гоблины начинают разбегаться в ужасе. '\n","                  f'Алхимик благодарит {hero.name} за освобождение от проклятых гоблинов и в знак уважение дает {hero.name} магическое зелье.')\n","            archive['n3'].append(1)\n","            hero.modify_stats(1.2, 1.2)\n","\n","        else:\n","            print(f'{hero.name} ни капли не сомневаясь, поднимает меч чтобы совершить сокрушительный удар предводителю гоблинов, '\n","                  f'но внезапно одно из копей прилетает {hero.name} под ребро. Истекая кровью, {hero.name} приходиться бежать с поля боя.')\n","            archive['n3'].append(0)\n","            hero.modify_stats(0.8, 1)\n","\n","    elif n3_2 == 2:\n","        print(f'Понимая, что гоблины существа честные и не стали бы брать в плен кого попало, {hero.name} продолжает свой путь.')\n","        archive['n3'].append(0)\n","\n","    time.sleep(3)\n","\n","    #миссия с ведьмой\n","    print(f'Преодолев логово гоблинов, {hero.name} слышит истории о могущественной ведьме, что живет на заброшенном болоте у подножия Черных Холмов. '\n","          f'Легенды гласят, что у неё есть проклятый меч, чья сила способна сразить любого врага, но каждый, кто владеет этим оружием, платит за него страшную цену. '\n","          f'Решив, что ради победы над Таргулом необходимо рискнуть, {hero.name} отправляется на болото.')\n","\n","    time.sleep(2)\n","\n","    print(f'Ведьма встретила {hero.name} в мрачной тишине своей хижины, её глаза блестели хитростью, а вокруг витал слабый запах трав и зелья. '\n","          f'Она пристально изучала героя, словно видела его душу насквозь. '\n","          f'В её словах прозвучала насмешка и предупреждение: проклятый меч, который искал {hero.name}, действительно обладал невероятной силой, способной уничтожить даже такого врага, как Таргул. '\n","          f'Однако цена за обладание этой мощью была высока — часть души владельца медленно угасала с каждым ударом клинка.')\n","\n","    time.sleep(1)\n","\n","    n3_3 = int(input(f'В итоге {hero.name} решает:\\n'\n","                 f'1)Взять проклятый меч\\n'\n","                 f'2)К черту эту ведьму\\n'))\n","\n","    if n3_3 == 1:\n","        print(f'{hero.name} тянет руку к клинку, чувствуя его холод и тяжесть. '\n","              f'Прикосновение к оружию кажется ему договором с самой тьмой. '\n","              f'Ведьма наблюдает с довольной улыбкой, её шёпот наполняет воздух обещаниями силы и могущества.')\n","        hero.modify_stats(0.7, 2)\n","\n","    elif n3_3 == 2:\n","        print(f'{hero.name} решает, что риск слишком велик, и разворачивается, чтобы уйти. '\n","              f'Ведьма лишь пожимает плечами, её голос эхом звучит в голове героя: '\n","              f'\"Когда будешь умирать, вспомни, что отверг мою помощь.\"')\n","\n","    time.sleep(5)\n","\n","    #финальная 4 глава\n","    print('Финал. Битва с Таргулом.\\n'\n","          f'Покинув хижину ведьмы, {hero.name} шагнул в прохладную ночь. '\n","          f'За его спиной туман окутывал хижину, словно пытаясь удержать героя, а впереди лежала извилистая тропа, ведущая вглубь гор. '\n","          f'Луна освещала дорогу слабым светом, едва пробиваясь сквозь густые облака, а ветер приносил с собой предчувствие грядущей битвы.')\n","\n","    time.sleep(3)\n","\n","    print(f'Логово Таргула ждало в сердце гор. {hero.name} шёл с твёрдой уверенностью, что все испытания позади были лишь началом. '\n","          f'Впереди — встреча с древним врагом, где решится судьба не только героя, но и всего королевства.')\n","\n","    time.sleep(2)\n","\n","    print(f'Логово Таргула раскрылось перед {hero.name}, словно пасть древнего чудовища. '\n","          f'В воздухе витал запах серы и пепла, а земля под ногами дрожала от каждого вздоха дракона. '\n","          f'Мрак пещеры скрывал истинные размеры зверя, но даже в темноте его глаза горели, как два раскалённых угля, устремлённых прямо на героя.')\n","\n","    time.sleep(2)\n","\n","    print(f'Это был момент истины. Всё, через что прошёл {hero.name}, привело его сюда. '\n","          f'Судьба королевства зависела от исхода этой битвы, и только отвага и сила героя могли принести свет в царство, окутанное страхом.')\n","\n","    time.sleep(2)\n","\n","    print(f'Таргул поднялся, развернув свои крылья, и воздух наполнился гулом.')\n","\n","    time.sleep(1)\n","\n","    print('Битва началась!')\n","\n","    #тут начинается бешеное ветвление поэтому закомментирую\n","    #вариант того что герой НЕ взял рыцаря и НЕ взял зелье\n","    if archive['n3'] == [0,0]:\n","        #победа героя\n","        if (fight(hero,dragon)):\n","            print(f'Когда последний мощный удар {hero.name} разрушил чешую и пробил сердце Таргула, '\n","                  f'дракон содрогнулся, и его тело с оглушительным грохотом рухнуло на землю. '\n","                  f'Пещера вздрогнула от этой последней битвы, и вдруг всё затихло. '\n","                  f'Лишь горячий воздух, до сих пор исходящий от чудовища, напоминал о том, что здесь только что разгорелась смертельная схватка.')\n","\n","            time.sleep(2)\n","\n","            print(f'Молниеносный ветер развеял дым над телом Таргула, и в этот момент мир будто освободился от его гнёта. '\n","                  f'Все, кто жил в тени страха, теперь могли вновь дышать свободно.')\n","\n","            time.sleep(1)\n","\n","            print(f'Это был момент триумфа. {hero.name} победил.')\n","\n","        #проигрыш героя\n","        else:\n","            print(f'Таргул нанес последний удар, и {hero.name} рухнул на землю, лишённый сил. '\n","                  f'Пламя дракона охватило его, и, несмотря на всю храбрость, герой не смог устоять. '\n","                  f'В этот момент мир поглотил его, и битва была завершена.')\n","\n","            time.sleep(2)\n","\n","            print(f'Таргул остался жив, а королевство снова оказалось под гнётом древнего дракона. '\n","                  f'Имя {hero.name} останется в памяти как символ мужества, но в этот раз судьба была жестока.')\n","\n","    # вариант того что герой ВЗЯЛ рыцаря и НЕ взял зелье\n","    elif archive['n3'] == [1,0]:\n","\n","        print(f'Первым в бой вступил ваш верный помощник Кьуини')\n","\n","        #бой рыцаря и дракона, тут рыцарь всегда проигрывает, так что я не добавляю условие\n","        fight(knight,dragon)\n","\n","        time.sleep(1)\n","\n","        print(f'Рыцарь, смело вступивший в бой, бросился на Таргула с отчаянной храбростью. '\n","              f'Он атаковал с яростью, но дракон был слишком силён. '\n","              f'Один мощный удар хвоста Таргула отбросил рыцаря на несколько метров, и, несмотря на его попытки подняться, он не смог продолжить борьбу. '\n","              f'Его оружие выскользнуло из рук, и тело рыцаря оказалось повалено в пыль.')\n","\n","        time.sleep(2)\n","\n","        print(f'{hero.name}, видя, как его союзник падал, чувствовал, как его собственные силы начали таять. '\n","              f'Но ещё не всё было потеряно. Таргул был велик, но и сам герой был готов сражаться до конца.')\n","\n","        time.sleep(1)\n","\n","        #бой ГГ с драконом\n","        #победа ГГ\n","        if (fight(hero, dragon)):\n","            print(f'Когда последний мощный удар {hero.name} разрушил чешую и пробил сердце Таргула, '\n","                  f'дракон содрогнулся, и его тело с оглушительным грохотом рухнуло на землю. '\n","                  f'Пещера вздрогнула от этой последней битвы, и вдруг всё затихло. '\n","                  f'Лишь горячий воздух, до сих пор исходящий от чудовища, напоминал о том, что здесь только что разгорелась смертельная схватка.')\n","\n","            time.sleep(2)\n","\n","            print(f'Молниеносный ветер развеял дым над телом Таргула, и в этот момент мир будто освободился от его гнёта. '\n","                  f'Все, кто жил в тени страха, теперь могли вновь дышать свободно.')\n","\n","            time.sleep(1)\n","\n","            print(f'Это был момент триумфа. {hero.name} победил.')\n","        #проигрышь ГГ\n","        else:\n","            print(f'Таргул нанес последний удар, и {hero.name} рухнул на землю, лишённый сил. '\n","                  f'Пламя дракона охватило его, и, несмотря на всю храбрость, герой не смог устоять. '\n","                  f'В этот момент мир поглотил его, и битва была завершена.')\n","\n","            time.sleep(2)\n","\n","            print(f'Таргул остался жив, а королевство снова оказалось под гнётом древнего дракона. '\n","                  f'Имя {hero.name} останется в памяти как символ мужества, но в этот раз судьба была жестока.')\n","\n","    # вариант того что герой ВЗЯЛ зелье, НО не умеет им пользоваться\n","    elif archive['n3'][1] == 1 and archive['n1'] != 1:\n","        # вариант того что герой НЕ взял рыцаря и ВЗЯЛ зелье, НО не умеет им пользоваться\n","        # тут по лору битвы не будет потому что ГГ не знает как пользоваться зельем, узнать он это может\n","        # только если выберет мудреца в первой главе\n","        if archive['n3'][0] == 0:\n","            print(f'{hero.name}, стоя на поле битвы, осознал, что ситуация становится всё более безнадежной. '\n","                  f'В его руках оказалось магическое зелье, которое обещало стать последним шансом на победу, '\n","                  f'но он не знал, как правильно его использовать. В панике и отчаянии он принял решение — выпить зелье, надеясь, что оно придаст силы.')\n","\n","            time.sleep(2)\n","\n","            print(f'Однако, не зная тонкостей магии, {hero.name} неверно активировал зелье. '\n","                  f'Вместо того чтобы укрепить его здоровье, оно вызвало сильную боль. '\n","                  f'Ядовитая энергия обжигала его тело, заставляя его колени подогнуться. '\n","                  f'Сердце стучало всё быстрее, а его кожа побелела, словно поглощённая тенью.')\n","\n","            time.sleep(2)\n","\n","            print(f'Последний взгляд героя упал на Таргула, который наблюдал за ним с издёвкой, понимая, что победа уже близка. '\n","                  f'С каждым мгновением {hero.name} терял силы, и, несмотря на свою решимость, он пал на землю, не в силах встать.')\n","\n","            time.sleep(2)\n","\n","            print('Это был конец. Магическое зелье, которое должно было стать спасением, стало причиной его гибели.')\n","\n","        # вариант того что герой ВЗЯЛ рыцаря и ВЗЯЛ зелье, НО не умеет им пользоваться\n","        elif archive['n3'][0] == 1:\n","\n","            print(f'Первым в бой вступил ваш верный помощник Кьуини')\n","\n","            #бой рыцаря и дракона\n","            fight(knight, dragon)\n","\n","            time.sleep(1)\n","\n","            print(f'Рыцарь, смело вступивший в бой, бросился на Таргула с отчаянной храбростью. '\n","                  f'Он атаковал с яростью, но дракон был слишком силён. '\n","                  f'Один мощный удар хвоста Таргула отбросил рыцаря на несколько метров, и, несмотря на его попытки подняться, он не смог продолжить борьбу. '\n","                  f'Его оружие выскользнуло из рук, и тело рыцаря оказалось повалено в пыль.')\n","\n","            time.sleep(2)\n","\n","            print(f'{hero.name}, видя, как его союзник падал, чувствовал, как его собственные силы начали таять. ')\n","\n","            #опять ГГ умирает потому что не знает как пользоваться зельем\n","            print(f'{hero.name}, стоя на поле битвы, осознал, что ситуация становится всё более безнадежной. '\n","                  f'В его руках оказалось магическое зелье, которое обещало стать последним шансом на победу, '\n","                  f'но он не знал, как правильно его использовать. В панике и отчаянии он принял решение — выпить зелье, надеясь, что оно придаст силы.')\n","\n","            time.sleep(2)\n","\n","            print(f'Однако, не зная тонкостей магии, {hero.name} неверно активировал зелье. '\n","                  f'Вместо того чтобы укрепить его здоровье, оно вызвало сильную боль. '\n","                  f'Ядовитая энергия обжигала его тело, заставляя его колени подогнуться. '\n","                  f'Сердце стучало всё быстрее, а его кожа побелела, словно поглощённая тенью.')\n","\n","            time.sleep(2)\n","\n","            print(f'Последний взгляд героя упал на Таргула, который наблюдал за ним с издёвкой, понимая, что победа уже близка. '\n","                  f'С каждым мгновением {hero.name} терял силы, и, несмотря на свою решимость, он пал на землю, не в силах встать.')\n","\n","            time.sleep(2)\n","\n","            print('Это был конец. Магическое зелье, которое должно было стать спасением, стало причиной его гибели.')\n","\n","    # вариант того что герой ВЗЯЛ зелье, и УМЕЕТ им пользоваться\n","    elif archive['n3'][1] == 1 and archive['n1'] == 1:\n","        # вариант того что герой НЕ взял рыцаря и ВЗЯЛ зелье, и УМЕЕТ им пользоваться\n","        if archive['n3'][0] == 0:\n","            print(f'{hero.name}, вспомнив слова мудреца, понял, что зелье нужно применить против Таргула. '\n","                  f'Он быстро открыл флакон и вылил его в сторону дракона.')\n","\n","            time.sleep(1)\n","\n","            print(f'Зелье окружило Таргула ярким светом, и его чешуя почернела, а крылья ослабли. '\n","                  f'Дракон взревел, его сила значительно уменьшилась. Теперь {hero.name} знал, что победа возможна — Таргул стал уязвим.')\n","\n","            #применение зелья к дракону\n","            dragon.modify_stats(0.5,0.7)\n","\n","            time.sleep(1)\n","\n","            #бой ГГ и дракона\n","            #победа ГГ\n","            if (fight(hero, dragon)):\n","                print(f'Когда последний мощный удар {hero.name} разрушил чешую и пробил сердце Таргула, '\n","                      f'дракон содрогнулся, и его тело с оглушительным грохотом рухнуло на землю. '\n","                      f'Пещера вздрогнула от этой последней битвы, и вдруг всё затихло. '\n","                      f'Лишь горячий воздух, до сих пор исходящий от чудовища, напоминал о том, что здесь только что разгорелась смертельная схватка.')\n","\n","                time.sleep(2)\n","\n","                print(f'Молниеносный ветер развеял дым над телом Таргула, и в этот момент мир будто освободился от его гнёта. '\n","                      f'Все, кто жил в тени страха, теперь могли вновь дышать свободно.')\n","\n","                time.sleep(1)\n","\n","                print(f'Это был момент триумфа. {hero.name} победил.')\n","\n","            # проигрышь ГГ\n","            else:\n","                print(f'Таргул нанес последний удар, и {hero.name} рухнул на землю, лишённый сил. '\n","                      f'Пламя дракона охватило его, и, несмотря на всю храбрость, герой не смог устоять. '\n","                      f'В этот момент мир поглотил его, и битва была завершена.')\n","\n","                time.sleep(2)\n","\n","                print(f'Таргул остался жив, а королевство снова оказалось под гнётом древнего дракона. '\n","                      f'Имя {hero.name} останется в памяти как символ мужества, но в этот раз судьба была жестока.')\n","\n","        # вариант того что герой ВЗЯЛ рыцаря и ВЗЯЛ зелье, и УМЕЕТ им пользоваться\n","        elif archive['n3'][0] == 1:\n","            print(f'Первым в бой вступил ваш верный помощник Кьуини')\n","\n","            #бой рыцаря и дракона\n","            fight(knight, dragon)\n","\n","            time.sleep(1)\n","\n","            print(f'Рыцарь, смело вступивший в бой, бросился на Таргула с отчаянной храбростью. '\n","                 f'Он атаковал с яростью, но дракон был слишком силён. '\n","                 f'Один мощный удар хвоста Таргула отбросил рыцаря на несколько метров, и, несмотря на его попытки подняться, он не смог продолжить борьбу. '\n","                 f'Его оружие выскользнуло из рук, и тело рыцаря оказалось повалено в пыль.')\n","\n","            time.sleep(2)\n","\n","            print(f'{hero.name}, видя, как его союзник падал, чувствовал, как его собственные силы начали таять. '\n","                 f'Но ещё не всё было потеряно. Таргул был велик, но и сам герой был готов сражаться до конца.')\n","\n","            print(f'{hero.name}, вспомнив слова мудреца, понял, что зелье нужно применить против Таргула. '\n","                  f'Он быстро открыл флакон и вылил его в сторону дракона.')\n","\n","            time.sleep(1)\n","\n","            print(f'Зелье окружило Таргула ярким светом, и его чешуя почернела, а крылья ослабли. '\n","                  f'Дракон взревел, его сила значительно уменьшилась. Теперь {hero.name} знал, что победа возможна — Таргул стал уязвим.')\n","\n","            #зелье на дракона\n","            dragon.modify_stats(0.5, 0.7)\n","\n","            time.sleep(1)\n","\n","            #бой ГГ с драконом\n","            #победа ГГ\n","            if (fight(hero, dragon)):\n","                print(f'Когда последний мощный удар {hero.name} разрушил чешую и пробил сердце Таргула, '\n","                      f'дракон содрогнулся, и его тело с оглушительным грохотом рухнуло на землю. '\n","                      f'Пещера вздрогнула от этой последней битвы, и вдруг всё затихло. '\n","                      f'Лишь горячий воздух, до сих пор исходящий от чудовища, напоминал о том, что здесь только что разгорелась смертельная схватка.')\n","\n","                time.sleep(2)\n","\n","                print(\n","                    f'Молниеносный ветер развеял дым над телом Таргула, и в этот момент мир будто освободился от его гнёта. '\n","                    f'Все, кто жил в тени страха, теперь могли вновь дышать свободно.')\n","\n","                time.sleep(1)\n","\n","                print(f'Это был момент триумфа. {hero.name} победил.')\n","\n","            #проигрыш ГГ\n","            else:\n","                print(f'Таргул нанес последний удар, и {hero.name} рухнул на землю, лишённый сил. '\n","                      f'Пламя дракона охватило его, и, несмотря на всю храбрость, герой не смог устоять. '\n","                      f'В этот момент мир поглотил его, и битва была завершена.')\n","\n","                time.sleep(2)\n","\n","                print(f'Таргул остался жив, а королевство снова оказалось под гнётом древнего дракона. '\n","                      f'Имя {hero.name} останется в памяти как символ мужества, но в этот раз судьба была жестока.')\n","\n","\n","main()\n"],"metadata":{"id":"Oz9BZbhAFwua"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дополнительное задание\n"],"metadata":{"id":"b_mJHXcQGI9t"}},{"cell_type":"markdown","source":["Задача: Система управления библиотекой\n","\n","**Цель**\n","Создайте простую систему управления библиотекой, которая позволит пользователям добавлять книги, брать книги, возвращать книги и просматривать список доступных книг.\n","\n","**Требования**\n","\n","1. **Определение класса**:\n","   – Создайте класс с именем «Book» со следующими атрибутами:\n","     - `title`\n","     - `автор`\n","     - `isbn`\n","     - `is_borrowed` (по умолчанию `False`)\n","\n","2. **Класс библиотеки**:\n","   - Создайте класс с именем Library, который управляет коллекцией книг.\n","   - Класс должен иметь следующие методы:\n","     - `__init__(self)`: инициализирует пустой список книг.\n","     - `add_book(self, book: Book)`: добавляет новую книгу в библиотеку.\n","     - `borrow_book(self, isbn: str)`: помечает книгу как заимствованную. Если книга не найдена или уже взята, выведите соответствующее сообщение.\n","     - `return_book(self, isbn: str)`: помечает книгу как возвращенную. Если книга не найдена или не была взята взаймы, выведите соответствующее сообщение.\n","     - `list_available_books(self)`: печатает список всех доступных книг в библиотеке.\n","     - `find_book(self, isbn: str)`: возвращает объект книги, если он найден, в противном случае возвращает `None`.\n","\n","3. **Взаимодействие с пользователем**:\n","   - Создайте простое текстовое меню, которое позволит пользователям:\n","     - Добавить книгу\n","     - Одолжить книгу\n","     - Вернуть книгу\n","     - Список доступных книг\n","     - Выйти из программы"],"metadata":{"id":"pnIUdFPcGOVL"}},{"cell_type":"code","source":[],"metadata":{"id":"GKKmdfN8GL6f"},"execution_count":null,"outputs":[]}]}